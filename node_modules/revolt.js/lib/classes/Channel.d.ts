import type { Channel as ApiChannel } from "revolt-api";
import { Client } from "../Client";
import { HydratedChannel } from "../hydration/channel";
import { ObjectStorage } from "../storage/ObjectStorage";
declare const _default: (client: Client) => {
    new (id: string, data?: ApiChannel): {
        readonly id: string;
        /**
         * Time when this server was created
         */
        readonly createdAt: Date;
        /**
         * Channel type
         */
        readonly type: "SavedMessages" | "DirectMessage" | "Group" | "TextChannel" | "VoiceChannel";
        /**
         * Channel name
         */
        readonly name: string;
        /**
         * Channel description
         */
        readonly description: string | undefined;
        /**
         * Channel icon
         */
        readonly icon: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | undefined;
        /**
         * Whether the conversation is active
         */
        readonly active: boolean;
        /**
         * Recipients of the group
         */
        readonly recipients: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        }[];
        /**
         * User this channel belongs to
         */
        readonly user: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        } | undefined;
        /**
         * Owner of the group
         */
        readonly owner: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        } | undefined;
        /**
         * Server this channel is in
         */
        readonly server: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        } | undefined;
        /**
         * Permissions allowed for users in this group
         */
        readonly permissions: number | undefined;
        /**
         * Default permissions for this server channel
         */
        readonly defaultPermissions: {
            a: number;
            d: number;
        } | undefined;
        /**
         * Role permissions for this server channel
         */
        readonly rolePermissions: Record<string, {
            a: number;
            d: number;
        }> | undefined;
        /**
         * Whether this channel is marked as mature
         */
        readonly mature: boolean;
        /**
         * ID of the last message sent in this channel
         */
        readonly lastMessageId: string | undefined;
    };
    "__#5@#storage": ObjectStorage<HydratedChannel>;
    "__#5@#objects": Record<string, {
        readonly id: string;
        /**
         * Time when this server was created
         */
        readonly createdAt: Date;
        /**
         * Channel type
         */
        readonly type: "SavedMessages" | "DirectMessage" | "Group" | "TextChannel" | "VoiceChannel";
        /**
         * Channel name
         */
        readonly name: string;
        /**
         * Channel description
         */
        readonly description: string | undefined;
        /**
         * Channel icon
         */
        readonly icon: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | undefined;
        /**
         * Whether the conversation is active
         */
        readonly active: boolean;
        /**
         * Recipients of the group
         */
        readonly recipients: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        }[];
        /**
         * User this channel belongs to
         */
        readonly user: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        } | undefined;
        /**
         * Owner of the group
         */
        readonly owner: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        } | undefined;
        /**
         * Server this channel is in
         */
        readonly server: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        } | undefined;
        /**
         * Permissions allowed for users in this group
         */
        readonly permissions: number | undefined;
        /**
         * Default permissions for this server channel
         */
        readonly defaultPermissions: {
            a: number;
            d: number;
        } | undefined;
        /**
         * Role permissions for this server channel
         */
        readonly rolePermissions: Record<string, {
            a: number;
            d: number;
        }> | undefined;
        /**
         * Whether this channel is marked as mature
         */
        readonly mature: boolean;
        /**
         * ID of the last message sent in this channel
         */
        readonly lastMessageId: string | undefined;
    }>;
    /**
     * Get an existing Channel
     * @param id Channel ID
     * @returns Channel
     */
    get(id: string): {
        readonly id: string;
        /**
         * Time when this server was created
         */
        readonly createdAt: Date;
        /**
         * Channel type
         */
        readonly type: "SavedMessages" | "DirectMessage" | "Group" | "TextChannel" | "VoiceChannel";
        /**
         * Channel name
         */
        readonly name: string;
        /**
         * Channel description
         */
        readonly description: string | undefined;
        /**
         * Channel icon
         */
        readonly icon: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | undefined;
        /**
         * Whether the conversation is active
         */
        readonly active: boolean;
        /**
         * Recipients of the group
         */
        readonly recipients: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        }[];
        /**
         * User this channel belongs to
         */
        readonly user: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        } | undefined;
        /**
         * Owner of the group
         */
        readonly owner: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        } | undefined;
        /**
         * Server this channel is in
         */
        readonly server: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        } | undefined;
        /**
         * Permissions allowed for users in this group
         */
        readonly permissions: number | undefined;
        /**
         * Default permissions for this server channel
         */
        readonly defaultPermissions: {
            a: number;
            d: number;
        } | undefined;
        /**
         * Role permissions for this server channel
         */
        readonly rolePermissions: Record<string, {
            a: number;
            d: number;
        }> | undefined;
        /**
         * Whether this channel is marked as mature
         */
        readonly mature: boolean;
        /**
         * ID of the last message sent in this channel
         */
        readonly lastMessageId: string | undefined;
    } | undefined;
    /**
     * Fetch channel by ID
     * @param id ID
     * @returns Channel
     */
    fetch(id: string): Promise<{
        readonly id: string;
        /**
         * Time when this server was created
         */
        readonly createdAt: Date;
        /**
         * Channel type
         */
        readonly type: "SavedMessages" | "DirectMessage" | "Group" | "TextChannel" | "VoiceChannel";
        /**
         * Channel name
         */
        readonly name: string;
        /**
         * Channel description
         */
        readonly description: string | undefined;
        /**
         * Channel icon
         */
        readonly icon: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | undefined;
        /**
         * Whether the conversation is active
         */
        readonly active: boolean;
        /**
         * Recipients of the group
         */
        readonly recipients: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        }[];
        /**
         * User this channel belongs to
         */
        readonly user: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        } | undefined;
        /**
         * Owner of the group
         */
        readonly owner: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        } | undefined;
        /**
         * Server this channel is in
         */
        readonly server: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        } | undefined;
        /**
         * Permissions allowed for users in this group
         */
        readonly permissions: number | undefined;
        /**
         * Default permissions for this server channel
         */
        readonly defaultPermissions: {
            a: number;
            d: number;
        } | undefined;
        /**
         * Role permissions for this server channel
         */
        readonly rolePermissions: Record<string, {
            a: number;
            d: number;
        }> | undefined;
        /**
         * Whether this channel is marked as mature
         */
        readonly mature: boolean;
        /**
         * ID of the last message sent in this channel
         */
        readonly lastMessageId: string | undefined;
    } | undefined>;
};
export default _default;
//# sourceMappingURL=Channel.d.ts.map