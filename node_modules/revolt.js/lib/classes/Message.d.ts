import type { Message as ApiMessage } from "revolt-api";
import { Client } from "../Client";
import { HydratedMessage } from "../hydration/message";
import { ObjectStorage } from "../storage/ObjectStorage";
declare const _default: (client: Client) => {
    new (id: string, data?: ApiMessage): {
        readonly id: string;
        /**
         * Time when this message was posted
         */
        readonly createdAt: Date;
        /**
         * Nonce value
         */
        readonly nonce: string | undefined;
        /**
         * Channel this message was sent in
         */
        readonly channel: {
            readonly id: string;
            readonly createdAt: Date;
            readonly type: "SavedMessages" | "DirectMessage" | "Group" | "TextChannel" | "VoiceChannel";
            readonly name: string;
            readonly description: string | undefined;
            readonly icon: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly active: boolean;
            readonly recipients: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string; /**
                 * Time when this message was posted
                 */
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined; /**
                 * Time at which this message was edited
                 */
            }[];
            readonly user: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string; /**
                 * Time when this message was posted
                 */
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined; /**
                 * Time at which this message was edited
                 */
            } | undefined;
            readonly owner: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string; /**
                 * Time when this message was posted
                 */
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined; /**
                 * Time at which this message was edited
                 */
            } | undefined;
            readonly server: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string; /**
                 * Time when this message was posted
                 */
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined; /**
                 * Time at which this message was edited
                 */
            } | undefined;
            readonly permissions: number | undefined;
            readonly defaultPermissions: {
                a: number;
                d: number;
            } | undefined;
            readonly rolePermissions: Record<string, {
                a: number;
                d: number;
            }> | undefined;
            readonly mature: boolean;
            readonly lastMessageId: string | undefined;
        } | undefined;
        /**
         * User this message was sent by
         */
        readonly author: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string; /**
             * Time when this message was posted
             */
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined; /**
             * Time at which this message was edited
             */
        } | undefined;
        /**
         * Content
         */
        readonly content: string | undefined;
        /**
         * System message content
         */
        readonly systemMessage: {
            type: "text";
            content: string;
        } | {
            type: "user_added";
            id: string;
            by: string;
        } | {
            type: "user_remove";
            id: string;
            by: string;
        } | {
            type: "user_joined";
            id: string;
        } | {
            type: "user_left";
            id: string;
        } | {
            type: "user_kicked";
            id: string;
        } | {
            type: "user_banned";
            id: string;
        } | {
            type: "channel_renamed";
            name: string;
            by: string;
        } | {
            type: "channel_description_changed";
            by: string;
        } | {
            type: "channel_icon_changed";
            by: string;
        } | {
            type: "channel_ownership_changed";
            from: string;
            to: string;
        } | undefined;
        /**
         * Attachments
         */
        readonly attachments: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        }[] | undefined;
        /**
         * Time at which this message was edited
         */
        readonly editedAt: Date | undefined;
        /**
         * Embeds
         */
        readonly embeds: ({
            type: "Website";
            url?: string | null | undefined;
            original_url?: string | null | undefined;
            special?: {
                type: "None";
            } | {
                type: "GIF";
            } | {
                type: "YouTube";
                id: string;
                timestamp?: string | null | undefined;
            } | {
                type: "Lightspeed";
                content_type: "Channel";
                id: string;
            } | {
                type: "Twitch";
                content_type: "Channel" | "Video" | "Clip";
                id: string;
            } | {
                type: "Spotify";
                content_type: string;
                id: string;
            } | {
                type: "Soundcloud";
            } | {
                type: "Bandcamp";
                content_type: "Album" | "Track";
                id: string;
            } | {
                type: "Streamable";
                id: string;
            } | null | undefined;
            title?: string | null | undefined;
            description?: string | null | undefined;
            image?: {
                url: string;
                width: number;
                height: number;
                size: "Large" | "Preview";
            } | null | undefined;
            video?: {
                url: string;
                width: number;
                height: number;
            } | null | undefined;
            site_name?: string | null | undefined;
            icon_url?: string | null | undefined;
            colour?: string | null | undefined;
        } | {
            type: "Image";
            url: string;
            width: number;
            height: number;
            size: "Large" | "Preview";
        } | {
            type: "Video";
            url: string;
            width: number;
            height: number;
        } | {
            type: "Text";
            icon_url?: string | null | undefined;
            url?: string | null | undefined;
            title?: string | null | undefined;
            description?: string | null | undefined;
            media?: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | null | undefined;
            colour?: string | null | undefined;
        } | {
            type: "None";
        })[] | undefined;
        /**
         * IDs of users this message mentions
         */
        readonly mentionIds: string[] | undefined;
        /**
         * IDs of messages this message replies to
         */
        readonly replyIds: string[] | undefined;
        /**
         * Reactions
         */
        readonly reactions: import("@solid-primitives/map").ReactiveMap<string, import("@solid-primitives/set").ReactiveSet<string>> | undefined;
        /**
         * Interactions
         */
        readonly interactions: {
            reactions?: string[] | null | undefined;
            restrict_reactions?: boolean | undefined;
        } | undefined;
        /**
         * Masquerade
         */
        readonly masquerade: {
            name?: string | null | undefined;
            avatar?: string | null | undefined;
            colour?: string | null | undefined;
        } | undefined;
    };
    "__#12@#storage": ObjectStorage<HydratedMessage>;
    "__#12@#objects": Record<string, {
        readonly id: string;
        /**
         * Time when this message was posted
         */
        readonly createdAt: Date;
        /**
         * Nonce value
         */
        readonly nonce: string | undefined;
        /**
         * Channel this message was sent in
         */
        readonly channel: {
            readonly id: string;
            readonly createdAt: Date;
            readonly type: "SavedMessages" | "DirectMessage" | "Group" | "TextChannel" | "VoiceChannel";
            readonly name: string;
            readonly description: string | undefined;
            readonly icon: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly active: boolean;
            readonly recipients: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string; /**
                 * Time when this message was posted
                 */
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined; /**
                 * Time at which this message was edited
                 */
            }[];
            readonly user: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string; /**
                 * Time when this message was posted
                 */
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined; /**
                 * Time at which this message was edited
                 */
            } | undefined;
            readonly owner: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string; /**
                 * Time when this message was posted
                 */
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined; /**
                 * Time at which this message was edited
                 */
            } | undefined;
            readonly server: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string; /**
                 * Time when this message was posted
                 */
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined; /**
                 * Time at which this message was edited
                 */
            } | undefined;
            readonly permissions: number | undefined;
            readonly defaultPermissions: {
                a: number;
                d: number;
            } | undefined;
            readonly rolePermissions: Record<string, {
                a: number;
                d: number;
            }> | undefined;
            readonly mature: boolean;
            readonly lastMessageId: string | undefined;
        } | undefined;
        /**
         * User this message was sent by
         */
        readonly author: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string; /**
             * Time when this message was posted
             */
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined; /**
             * Time at which this message was edited
             */
        } | undefined;
        /**
         * Content
         */
        readonly content: string | undefined;
        /**
         * System message content
         */
        readonly systemMessage: {
            type: "text";
            content: string;
        } | {
            type: "user_added";
            id: string;
            by: string;
        } | {
            type: "user_remove";
            id: string;
            by: string;
        } | {
            type: "user_joined";
            id: string;
        } | {
            type: "user_left";
            id: string;
        } | {
            type: "user_kicked";
            id: string;
        } | {
            type: "user_banned";
            id: string;
        } | {
            type: "channel_renamed";
            name: string;
            by: string;
        } | {
            type: "channel_description_changed";
            by: string;
        } | {
            type: "channel_icon_changed";
            by: string;
        } | {
            type: "channel_ownership_changed";
            from: string;
            to: string;
        } | undefined;
        /**
         * Attachments
         */
        readonly attachments: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        }[] | undefined;
        /**
         * Time at which this message was edited
         */
        readonly editedAt: Date | undefined;
        /**
         * Embeds
         */
        readonly embeds: ({
            type: "Website";
            url?: string | null | undefined;
            original_url?: string | null | undefined;
            special?: {
                type: "None";
            } | {
                type: "GIF";
            } | {
                type: "YouTube";
                id: string;
                timestamp?: string | null | undefined;
            } | {
                type: "Lightspeed";
                content_type: "Channel";
                id: string;
            } | {
                type: "Twitch";
                content_type: "Channel" | "Video" | "Clip";
                id: string;
            } | {
                type: "Spotify";
                content_type: string;
                id: string;
            } | {
                type: "Soundcloud";
            } | {
                type: "Bandcamp";
                content_type: "Album" | "Track";
                id: string;
            } | {
                type: "Streamable";
                id: string;
            } | null | undefined;
            title?: string | null | undefined;
            description?: string | null | undefined;
            image?: {
                url: string;
                width: number;
                height: number;
                size: "Large" | "Preview";
            } | null | undefined;
            video?: {
                url: string;
                width: number;
                height: number;
            } | null | undefined;
            site_name?: string | null | undefined;
            icon_url?: string | null | undefined;
            colour?: string | null | undefined;
        } | {
            type: "Image";
            url: string;
            width: number;
            height: number;
            size: "Large" | "Preview";
        } | {
            type: "Video";
            url: string;
            width: number;
            height: number;
        } | {
            type: "Text";
            icon_url?: string | null | undefined;
            url?: string | null | undefined;
            title?: string | null | undefined;
            description?: string | null | undefined;
            media?: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | null | undefined;
            colour?: string | null | undefined;
        } | {
            type: "None";
        })[] | undefined;
        /**
         * IDs of users this message mentions
         */
        readonly mentionIds: string[] | undefined;
        /**
         * IDs of messages this message replies to
         */
        readonly replyIds: string[] | undefined;
        /**
         * Reactions
         */
        readonly reactions: import("@solid-primitives/map").ReactiveMap<string, import("@solid-primitives/set").ReactiveSet<string>> | undefined;
        /**
         * Interactions
         */
        readonly interactions: {
            reactions?: string[] | null | undefined;
            restrict_reactions?: boolean | undefined;
        } | undefined;
        /**
         * Masquerade
         */
        readonly masquerade: {
            name?: string | null | undefined;
            avatar?: string | null | undefined;
            colour?: string | null | undefined;
        } | undefined;
    }>;
    /**
     * Get an existing Message
     * @param id Message ID
     * @returns Message
     */
    get(id: string): {
        readonly id: string;
        /**
         * Time when this message was posted
         */
        readonly createdAt: Date;
        /**
         * Nonce value
         */
        readonly nonce: string | undefined;
        /**
         * Channel this message was sent in
         */
        readonly channel: {
            readonly id: string;
            readonly createdAt: Date;
            readonly type: "SavedMessages" | "DirectMessage" | "Group" | "TextChannel" | "VoiceChannel";
            readonly name: string;
            readonly description: string | undefined;
            readonly icon: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly active: boolean;
            readonly recipients: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string; /**
                 * Time when this message was posted
                 */
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined; /**
                 * Time at which this message was edited
                 */
            }[];
            readonly user: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string; /**
                 * Time when this message was posted
                 */
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined; /**
                 * Time at which this message was edited
                 */
            } | undefined;
            readonly owner: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string; /**
                 * Time when this message was posted
                 */
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined; /**
                 * Time at which this message was edited
                 */
            } | undefined;
            readonly server: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string; /**
                 * Time when this message was posted
                 */
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined; /**
                 * Time at which this message was edited
                 */
            } | undefined;
            readonly permissions: number | undefined;
            readonly defaultPermissions: {
                a: number;
                d: number;
            } | undefined;
            readonly rolePermissions: Record<string, {
                a: number;
                d: number;
            }> | undefined;
            readonly mature: boolean;
            readonly lastMessageId: string | undefined;
        } | undefined;
        /**
         * User this message was sent by
         */
        readonly author: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string; /**
             * Time when this message was posted
             */
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined; /**
             * Time at which this message was edited
             */
        } | undefined;
        /**
         * Content
         */
        readonly content: string | undefined;
        /**
         * System message content
         */
        readonly systemMessage: {
            type: "text";
            content: string;
        } | {
            type: "user_added";
            id: string;
            by: string;
        } | {
            type: "user_remove";
            id: string;
            by: string;
        } | {
            type: "user_joined";
            id: string;
        } | {
            type: "user_left";
            id: string;
        } | {
            type: "user_kicked";
            id: string;
        } | {
            type: "user_banned";
            id: string;
        } | {
            type: "channel_renamed";
            name: string;
            by: string;
        } | {
            type: "channel_description_changed";
            by: string;
        } | {
            type: "channel_icon_changed";
            by: string;
        } | {
            type: "channel_ownership_changed";
            from: string;
            to: string;
        } | undefined;
        /**
         * Attachments
         */
        readonly attachments: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        }[] | undefined;
        /**
         * Time at which this message was edited
         */
        readonly editedAt: Date | undefined;
        /**
         * Embeds
         */
        readonly embeds: ({
            type: "Website";
            url?: string | null | undefined;
            original_url?: string | null | undefined;
            special?: {
                type: "None";
            } | {
                type: "GIF";
            } | {
                type: "YouTube";
                id: string;
                timestamp?: string | null | undefined;
            } | {
                type: "Lightspeed";
                content_type: "Channel";
                id: string;
            } | {
                type: "Twitch";
                content_type: "Channel" | "Video" | "Clip";
                id: string;
            } | {
                type: "Spotify";
                content_type: string;
                id: string;
            } | {
                type: "Soundcloud";
            } | {
                type: "Bandcamp";
                content_type: "Album" | "Track";
                id: string;
            } | {
                type: "Streamable";
                id: string;
            } | null | undefined;
            title?: string | null | undefined;
            description?: string | null | undefined;
            image?: {
                url: string;
                width: number;
                height: number;
                size: "Large" | "Preview";
            } | null | undefined;
            video?: {
                url: string;
                width: number;
                height: number;
            } | null | undefined;
            site_name?: string | null | undefined;
            icon_url?: string | null | undefined;
            colour?: string | null | undefined;
        } | {
            type: "Image";
            url: string;
            width: number;
            height: number;
            size: "Large" | "Preview";
        } | {
            type: "Video";
            url: string;
            width: number;
            height: number;
        } | {
            type: "Text";
            icon_url?: string | null | undefined;
            url?: string | null | undefined;
            title?: string | null | undefined;
            description?: string | null | undefined;
            media?: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | null | undefined;
            colour?: string | null | undefined;
        } | {
            type: "None";
        })[] | undefined;
        /**
         * IDs of users this message mentions
         */
        readonly mentionIds: string[] | undefined;
        /**
         * IDs of messages this message replies to
         */
        readonly replyIds: string[] | undefined;
        /**
         * Reactions
         */
        readonly reactions: import("@solid-primitives/map").ReactiveMap<string, import("@solid-primitives/set").ReactiveSet<string>> | undefined;
        /**
         * Interactions
         */
        readonly interactions: {
            reactions?: string[] | null | undefined;
            restrict_reactions?: boolean | undefined;
        } | undefined;
        /**
         * Masquerade
         */
        readonly masquerade: {
            name?: string | null | undefined;
            avatar?: string | null | undefined;
            colour?: string | null | undefined;
        } | undefined;
    } | undefined;
    /**
     * Fetch message by ID
     * @param channelId Channel ID
     * @param messageId Message ID
     * @returns Message
     */
    fetch(channelId: string, messageId: string): Promise<{
        readonly id: string;
        /**
         * Time when this message was posted
         */
        readonly createdAt: Date;
        /**
         * Nonce value
         */
        readonly nonce: string | undefined;
        /**
         * Channel this message was sent in
         */
        readonly channel: {
            readonly id: string;
            readonly createdAt: Date;
            readonly type: "SavedMessages" | "DirectMessage" | "Group" | "TextChannel" | "VoiceChannel";
            readonly name: string;
            readonly description: string | undefined;
            readonly icon: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly active: boolean;
            readonly recipients: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string; /**
                 * Time when this message was posted
                 */
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined; /**
                 * Time at which this message was edited
                 */
            }[];
            readonly user: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string; /**
                 * Time when this message was posted
                 */
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined; /**
                 * Time at which this message was edited
                 */
            } | undefined;
            readonly owner: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string; /**
                 * Time when this message was posted
                 */
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined; /**
                 * Time at which this message was edited
                 */
            } | undefined;
            readonly server: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string; /**
                 * Time when this message was posted
                 */
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined; /**
                 * Time at which this message was edited
                 */
            } | undefined;
            readonly permissions: number | undefined;
            readonly defaultPermissions: {
                a: number;
                d: number;
            } | undefined;
            readonly rolePermissions: Record<string, {
                a: number;
                d: number;
            }> | undefined;
            readonly mature: boolean;
            readonly lastMessageId: string | undefined;
        } | undefined;
        /**
         * User this message was sent by
         */
        readonly author: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string; /**
             * Time when this message was posted
             */
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined; /**
             * Time at which this message was edited
             */
        } | undefined;
        /**
         * Content
         */
        readonly content: string | undefined;
        /**
         * System message content
         */
        readonly systemMessage: {
            type: "text";
            content: string;
        } | {
            type: "user_added";
            id: string;
            by: string;
        } | {
            type: "user_remove";
            id: string;
            by: string;
        } | {
            type: "user_joined";
            id: string;
        } | {
            type: "user_left";
            id: string;
        } | {
            type: "user_kicked";
            id: string;
        } | {
            type: "user_banned";
            id: string;
        } | {
            type: "channel_renamed";
            name: string;
            by: string;
        } | {
            type: "channel_description_changed";
            by: string;
        } | {
            type: "channel_icon_changed";
            by: string;
        } | {
            type: "channel_ownership_changed";
            from: string;
            to: string;
        } | undefined;
        /**
         * Attachments
         */
        readonly attachments: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        }[] | undefined;
        /**
         * Time at which this message was edited
         */
        readonly editedAt: Date | undefined;
        /**
         * Embeds
         */
        readonly embeds: ({
            type: "Website";
            url?: string | null | undefined;
            original_url?: string | null | undefined;
            special?: {
                type: "None";
            } | {
                type: "GIF";
            } | {
                type: "YouTube";
                id: string;
                timestamp?: string | null | undefined;
            } | {
                type: "Lightspeed";
                content_type: "Channel";
                id: string;
            } | {
                type: "Twitch";
                content_type: "Channel" | "Video" | "Clip";
                id: string;
            } | {
                type: "Spotify";
                content_type: string;
                id: string;
            } | {
                type: "Soundcloud";
            } | {
                type: "Bandcamp";
                content_type: "Album" | "Track";
                id: string;
            } | {
                type: "Streamable";
                id: string;
            } | null | undefined;
            title?: string | null | undefined;
            description?: string | null | undefined;
            image?: {
                url: string;
                width: number;
                height: number;
                size: "Large" | "Preview";
            } | null | undefined;
            video?: {
                url: string;
                width: number;
                height: number;
            } | null | undefined;
            site_name?: string | null | undefined;
            icon_url?: string | null | undefined;
            colour?: string | null | undefined;
        } | {
            type: "Image";
            url: string;
            width: number;
            height: number;
            size: "Large" | "Preview";
        } | {
            type: "Video";
            url: string;
            width: number;
            height: number;
        } | {
            type: "Text";
            icon_url?: string | null | undefined;
            url?: string | null | undefined;
            title?: string | null | undefined;
            description?: string | null | undefined;
            media?: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | null | undefined;
            colour?: string | null | undefined;
        } | {
            type: "None";
        })[] | undefined;
        /**
         * IDs of users this message mentions
         */
        readonly mentionIds: string[] | undefined;
        /**
         * IDs of messages this message replies to
         */
        readonly replyIds: string[] | undefined;
        /**
         * Reactions
         */
        readonly reactions: import("@solid-primitives/map").ReactiveMap<string, import("@solid-primitives/set").ReactiveSet<string>> | undefined;
        /**
         * Interactions
         */
        readonly interactions: {
            reactions?: string[] | null | undefined;
            restrict_reactions?: boolean | undefined;
        } | undefined;
        /**
         * Masquerade
         */
        readonly masquerade: {
            name?: string | null | undefined;
            avatar?: string | null | undefined;
            colour?: string | null | undefined;
        } | undefined;
    } | undefined>;
};
export default _default;
//# sourceMappingURL=Message.d.ts.map