import type { Server as ApiServer } from "revolt-api";
import { Channel, Client } from "../Client";
import { HydratedServer } from "../hydration/server";
import { ObjectStorage } from "../storage/ObjectStorage";
declare const _default: (client: Client) => {
    new (id: string, data?: ApiServer): {
        readonly id: string;
        /**
         * Time when this server was created
         */
        readonly createdAt: Date;
        /**
         * Owner
         */
        readonly owner: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            /**
             * Categories
             */
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        } | undefined;
        /**
         * Name
         */
        readonly name: string;
        /**
         * Description
         */
        readonly description: string | undefined;
        /**
         * Icon
         */
        readonly icon: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | undefined;
        /**
         * Banner
         */
        readonly banner: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | undefined;
        /**
         * Channels
         */
        readonly channels: {
            readonly id: string; /**
             * Construct Server
             * @param id Server Id
             */
            readonly createdAt: Date;
            readonly type: "SavedMessages" | "DirectMessage" | "Group" | "TextChannel" | "VoiceChannel"; /**
             * Name
             */
            readonly name: string;
            readonly description: string | undefined;
            readonly icon: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly active: boolean;
            readonly recipients: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            }[];
            readonly user: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly owner: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly server: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly permissions: number | undefined;
            readonly defaultPermissions: {
                a: number;
                d: number;
            } | undefined;
            readonly rolePermissions: Record<string, {
                a: number;
                d: number;
            }> | undefined;
            readonly mature: boolean;
            readonly lastMessageId: string | undefined;
        }[];
        /**
         * Categories
         */
        readonly categories: {
            id: string;
            title: string;
            channels: string[];
        }[] | undefined;
        /**
         * System message channels
         */
        readonly systemMessages: {
            user_joined?: string | null | undefined;
            user_left?: string | null | undefined;
            user_kicked?: string | null | undefined;
            user_banned?: string | null | undefined;
        } | undefined;
        /**
         * Roles
         */
        readonly roles: import("@solid-primitives/map").ReactiveMap<string, {
            name: string;
            permissions: {
                a: number;
                d: number;
            };
            colour?: string | null | undefined;
            hoist?: boolean | undefined;
            rank?: number | undefined;
        }> | undefined;
        /**
         * Default permissions
         */
        readonly defaultPermissions: number;
        /**
         * Server flags
         */
        readonly flags: import("../hydration/server").ServerFlags;
        /**
         * Whether analytics are enabled for this server
         */
        readonly analytics: boolean;
        /**
         * Whether this server is publicly discoverable
         */
        readonly discoverable: boolean;
        /**
         * Whether this server is marked as mature
         */
        readonly mature: boolean;
        /**
         * Get an array of ordered categories with their respective channels.
         * Uncategorised channels are returned in `id="default"` category.
         */
        readonly orderedChannels: (Omit<{
            id: string;
            title: string;
            channels: string[];
        }, "channels"> & {
            channels: Channel[];
        })[];
        /**
         * Default channel for this server
         */
        readonly defaultChannel: {
            readonly id: string; /**
             * Construct Server
             * @param id Server Id
             */
            readonly createdAt: Date;
            readonly type: "SavedMessages" | "DirectMessage" | "Group" | "TextChannel" | "VoiceChannel"; /**
             * Name
             */
            readonly name: string;
            readonly description: string | undefined;
            readonly icon: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly active: boolean;
            readonly recipients: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            }[];
            readonly user: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly owner: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly server: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly permissions: number | undefined;
            readonly defaultPermissions: {
                a: number;
                d: number;
            } | undefined;
            readonly rolePermissions: Record<string, {
                a: number;
                d: number;
            }> | undefined;
            readonly mature: boolean;
            readonly lastMessageId: string | undefined;
        } | undefined;
        /**
         * Get an ordered array of roles with their IDs attached.
         * The highest ranking roles will be first followed by lower
         * ranking roles. This is dictated by the "rank" property
         * which is smaller for higher priority roles.
         */
        readonly orderedRoles: {
            name: string;
            permissions: {
                a: number;
                d: number;
            };
            colour?: string | null | undefined;
            hoist?: boolean | undefined;
            rank?: number | undefined;
            id: string;
        }[];
    };
    "__#7@#storage": ObjectStorage<HydratedServer>;
    "__#7@#objects": Record<string, {
        readonly id: string;
        /**
         * Time when this server was created
         */
        readonly createdAt: Date;
        /**
         * Owner
         */
        readonly owner: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            /**
             * Categories
             */
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        } | undefined;
        /**
         * Name
         */
        readonly name: string;
        /**
         * Description
         */
        readonly description: string | undefined;
        /**
         * Icon
         */
        readonly icon: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | undefined;
        /**
         * Banner
         */
        readonly banner: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | undefined;
        /**
         * Channels
         */
        readonly channels: {
            readonly id: string; /**
             * Construct Server
             * @param id Server Id
             */
            readonly createdAt: Date;
            readonly type: "SavedMessages" | "DirectMessage" | "Group" | "TextChannel" | "VoiceChannel"; /**
             * Name
             */
            readonly name: string;
            readonly description: string | undefined;
            readonly icon: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly active: boolean;
            readonly recipients: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            }[];
            readonly user: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly owner: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly server: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly permissions: number | undefined;
            readonly defaultPermissions: {
                a: number;
                d: number;
            } | undefined;
            readonly rolePermissions: Record<string, {
                a: number;
                d: number;
            }> | undefined;
            readonly mature: boolean;
            readonly lastMessageId: string | undefined;
        }[];
        /**
         * Categories
         */
        readonly categories: {
            id: string;
            title: string;
            channels: string[];
        }[] | undefined;
        /**
         * System message channels
         */
        readonly systemMessages: {
            user_joined?: string | null | undefined;
            user_left?: string | null | undefined;
            user_kicked?: string | null | undefined;
            user_banned?: string | null | undefined;
        } | undefined;
        /**
         * Roles
         */
        readonly roles: import("@solid-primitives/map").ReactiveMap<string, {
            name: string;
            permissions: {
                a: number;
                d: number;
            };
            colour?: string | null | undefined;
            hoist?: boolean | undefined;
            rank?: number | undefined;
        }> | undefined;
        /**
         * Default permissions
         */
        readonly defaultPermissions: number;
        /**
         * Server flags
         */
        readonly flags: import("../hydration/server").ServerFlags;
        /**
         * Whether analytics are enabled for this server
         */
        readonly analytics: boolean;
        /**
         * Whether this server is publicly discoverable
         */
        readonly discoverable: boolean;
        /**
         * Whether this server is marked as mature
         */
        readonly mature: boolean;
        /**
         * Get an array of ordered categories with their respective channels.
         * Uncategorised channels are returned in `id="default"` category.
         */
        readonly orderedChannels: (Omit<{
            id: string;
            title: string;
            channels: string[];
        }, "channels"> & {
            channels: Channel[];
        })[];
        /**
         * Default channel for this server
         */
        readonly defaultChannel: {
            readonly id: string; /**
             * Construct Server
             * @param id Server Id
             */
            readonly createdAt: Date;
            readonly type: "SavedMessages" | "DirectMessage" | "Group" | "TextChannel" | "VoiceChannel"; /**
             * Name
             */
            readonly name: string;
            readonly description: string | undefined;
            readonly icon: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly active: boolean;
            readonly recipients: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            }[];
            readonly user: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly owner: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly server: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly permissions: number | undefined;
            readonly defaultPermissions: {
                a: number;
                d: number;
            } | undefined;
            readonly rolePermissions: Record<string, {
                a: number;
                d: number;
            }> | undefined;
            readonly mature: boolean;
            readonly lastMessageId: string | undefined;
        } | undefined;
        /**
         * Get an ordered array of roles with their IDs attached.
         * The highest ranking roles will be first followed by lower
         * ranking roles. This is dictated by the "rank" property
         * which is smaller for higher priority roles.
         */
        readonly orderedRoles: {
            name: string;
            permissions: {
                a: number;
                d: number;
            };
            colour?: string | null | undefined;
            hoist?: boolean | undefined;
            rank?: number | undefined;
            id: string;
        }[];
    }>;
    /**
     * Get an existing Server
     * @param id Server ID
     * @returns Server
     */
    get(id: string): {
        readonly id: string;
        /**
         * Time when this server was created
         */
        readonly createdAt: Date;
        /**
         * Owner
         */
        readonly owner: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            /**
             * Categories
             */
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        } | undefined;
        /**
         * Name
         */
        readonly name: string;
        /**
         * Description
         */
        readonly description: string | undefined;
        /**
         * Icon
         */
        readonly icon: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | undefined;
        /**
         * Banner
         */
        readonly banner: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | undefined;
        /**
         * Channels
         */
        readonly channels: {
            readonly id: string; /**
             * Construct Server
             * @param id Server Id
             */
            readonly createdAt: Date;
            readonly type: "SavedMessages" | "DirectMessage" | "Group" | "TextChannel" | "VoiceChannel"; /**
             * Name
             */
            readonly name: string;
            readonly description: string | undefined;
            readonly icon: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly active: boolean;
            readonly recipients: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            }[];
            readonly user: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly owner: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly server: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly permissions: number | undefined;
            readonly defaultPermissions: {
                a: number;
                d: number;
            } | undefined;
            readonly rolePermissions: Record<string, {
                a: number;
                d: number;
            }> | undefined;
            readonly mature: boolean;
            readonly lastMessageId: string | undefined;
        }[];
        /**
         * Categories
         */
        readonly categories: {
            id: string;
            title: string;
            channels: string[];
        }[] | undefined;
        /**
         * System message channels
         */
        readonly systemMessages: {
            user_joined?: string | null | undefined;
            user_left?: string | null | undefined;
            user_kicked?: string | null | undefined;
            user_banned?: string | null | undefined;
        } | undefined;
        /**
         * Roles
         */
        readonly roles: import("@solid-primitives/map").ReactiveMap<string, {
            name: string;
            permissions: {
                a: number;
                d: number;
            };
            colour?: string | null | undefined;
            hoist?: boolean | undefined;
            rank?: number | undefined;
        }> | undefined;
        /**
         * Default permissions
         */
        readonly defaultPermissions: number;
        /**
         * Server flags
         */
        readonly flags: import("../hydration/server").ServerFlags;
        /**
         * Whether analytics are enabled for this server
         */
        readonly analytics: boolean;
        /**
         * Whether this server is publicly discoverable
         */
        readonly discoverable: boolean;
        /**
         * Whether this server is marked as mature
         */
        readonly mature: boolean;
        /**
         * Get an array of ordered categories with their respective channels.
         * Uncategorised channels are returned in `id="default"` category.
         */
        readonly orderedChannels: (Omit<{
            id: string;
            title: string;
            channels: string[];
        }, "channels"> & {
            channels: Channel[];
        })[];
        /**
         * Default channel for this server
         */
        readonly defaultChannel: {
            readonly id: string; /**
             * Construct Server
             * @param id Server Id
             */
            readonly createdAt: Date;
            readonly type: "SavedMessages" | "DirectMessage" | "Group" | "TextChannel" | "VoiceChannel"; /**
             * Name
             */
            readonly name: string;
            readonly description: string | undefined;
            readonly icon: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly active: boolean;
            readonly recipients: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            }[];
            readonly user: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly owner: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly server: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly permissions: number | undefined;
            readonly defaultPermissions: {
                a: number;
                d: number;
            } | undefined;
            readonly rolePermissions: Record<string, {
                a: number;
                d: number;
            }> | undefined;
            readonly mature: boolean;
            readonly lastMessageId: string | undefined;
        } | undefined;
        /**
         * Get an ordered array of roles with their IDs attached.
         * The highest ranking roles will be first followed by lower
         * ranking roles. This is dictated by the "rank" property
         * which is smaller for higher priority roles.
         */
        readonly orderedRoles: {
            name: string;
            permissions: {
                a: number;
                d: number;
            };
            colour?: string | null | undefined;
            hoist?: boolean | undefined;
            rank?: number | undefined;
            id: string;
        }[];
    } | undefined;
    /**
     * Fetch server by ID
     * @param id ID
     * @returns Server
     */
    fetch(id: string): Promise<{
        readonly id: string;
        /**
         * Time when this server was created
         */
        readonly createdAt: Date;
        /**
         * Owner
         */
        readonly owner: {
            readonly id: string;
            readonly createdAt: Date;
            readonly username: string;
            readonly avatar: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly badges: import("../hydration/user").UserBadges;
            readonly status: {
                text?: string | null | undefined;
                presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
            } | undefined;
            readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
            readonly online: boolean;
            readonly privileged: boolean;
            /**
             * Categories
             */
            readonly flags: import("../hydration/user").UserFlags;
            readonly bot: {
                owner: string;
            } | undefined;
        } | undefined;
        /**
         * Name
         */
        readonly name: string;
        /**
         * Description
         */
        readonly description: string | undefined;
        /**
         * Icon
         */
        readonly icon: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | undefined;
        /**
         * Banner
         */
        readonly banner: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | undefined;
        /**
         * Channels
         */
        readonly channels: {
            readonly id: string; /**
             * Construct Server
             * @param id Server Id
             */
            readonly createdAt: Date;
            readonly type: "SavedMessages" | "DirectMessage" | "Group" | "TextChannel" | "VoiceChannel"; /**
             * Name
             */
            readonly name: string;
            readonly description: string | undefined;
            readonly icon: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly active: boolean;
            readonly recipients: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            }[];
            readonly user: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly owner: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly server: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly permissions: number | undefined;
            readonly defaultPermissions: {
                a: number;
                d: number;
            } | undefined;
            readonly rolePermissions: Record<string, {
                a: number;
                d: number;
            }> | undefined;
            readonly mature: boolean;
            readonly lastMessageId: string | undefined;
        }[];
        /**
         * Categories
         */
        readonly categories: {
            id: string;
            title: string;
            channels: string[];
        }[] | undefined;
        /**
         * System message channels
         */
        readonly systemMessages: {
            user_joined?: string | null | undefined;
            user_left?: string | null | undefined;
            user_kicked?: string | null | undefined;
            user_banned?: string | null | undefined;
        } | undefined;
        /**
         * Roles
         */
        readonly roles: import("@solid-primitives/map").ReactiveMap<string, {
            name: string;
            permissions: {
                a: number;
                d: number;
            };
            colour?: string | null | undefined;
            hoist?: boolean | undefined;
            rank?: number | undefined;
        }> | undefined;
        /**
         * Default permissions
         */
        readonly defaultPermissions: number;
        /**
         * Server flags
         */
        readonly flags: import("../hydration/server").ServerFlags;
        /**
         * Whether analytics are enabled for this server
         */
        readonly analytics: boolean;
        /**
         * Whether this server is publicly discoverable
         */
        readonly discoverable: boolean;
        /**
         * Whether this server is marked as mature
         */
        readonly mature: boolean;
        /**
         * Get an array of ordered categories with their respective channels.
         * Uncategorised channels are returned in `id="default"` category.
         */
        readonly orderedChannels: (Omit<{
            id: string;
            title: string;
            channels: string[];
        }, "channels"> & {
            channels: Channel[];
        })[];
        /**
         * Default channel for this server
         */
        readonly defaultChannel: {
            readonly id: string; /**
             * Construct Server
             * @param id Server Id
             */
            readonly createdAt: Date;
            readonly type: "SavedMessages" | "DirectMessage" | "Group" | "TextChannel" | "VoiceChannel"; /**
             * Name
             */
            readonly name: string;
            readonly description: string | undefined;
            readonly icon: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | undefined;
            readonly active: boolean;
            readonly recipients: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            }[];
            readonly user: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly owner: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly server: {
                readonly id: string;
                readonly createdAt: Date;
                readonly username: string;
                readonly avatar: {
                    _id: string;
                    tag: string;
                    filename: string;
                    metadata: {
                        type: "File";
                    } | {
                        type: "Text";
                    } | {
                        type: "Image";
                        width: number;
                        height: number;
                    } | {
                        type: "Video";
                        width: number;
                        height: number;
                    } | {
                        type: "Audio";
                    };
                    content_type: string;
                    size: number;
                    deleted?: boolean | null | undefined;
                    reported?: boolean | null | undefined;
                    message_id?: string | null | undefined;
                    user_id?: string | null | undefined;
                    server_id?: string | null | undefined;
                    object_id?: string | null | undefined;
                } | undefined;
                readonly badges: import("../hydration/user").UserBadges;
                readonly status: {
                    text?: string | null | undefined;
                    presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
                } | undefined;
                readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
                readonly online: boolean;
                readonly privileged: boolean;
                /**
                 * Categories
                 */
                readonly flags: import("../hydration/user").UserFlags;
                readonly bot: {
                    owner: string;
                } | undefined;
            } | undefined;
            readonly permissions: number | undefined;
            readonly defaultPermissions: {
                a: number;
                d: number;
            } | undefined;
            readonly rolePermissions: Record<string, {
                a: number;
                d: number;
            }> | undefined;
            readonly mature: boolean;
            readonly lastMessageId: string | undefined;
        } | undefined;
        /**
         * Get an ordered array of roles with their IDs attached.
         * The highest ranking roles will be first followed by lower
         * ranking roles. This is dictated by the "rank" property
         * which is smaller for higher priority roles.
         */
        readonly orderedRoles: {
            name: string;
            permissions: {
                a: number;
                d: number;
            };
            colour?: string | null | undefined;
            hoist?: boolean | undefined;
            rank?: number | undefined;
            id: string;
        }[];
    } | undefined>;
};
export default _default;
//# sourceMappingURL=Server.d.ts.map