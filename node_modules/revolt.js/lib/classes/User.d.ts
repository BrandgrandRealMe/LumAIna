import type { User as ApiUser } from "revolt-api";
import { Client } from "../Client";
import { HydratedUser } from "../hydration/user";
import { ObjectStorage } from "../storage/ObjectStorage";
declare const _default: (client: Client) => {
    new (id: string, data?: ApiUser): {
        readonly id: string;
        /**
         * Time when this user created their account
         */
        readonly createdAt: Date;
        /**
         * Username
         */
        readonly username: string;
        /**
         * Avatar
         */
        readonly avatar: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | undefined;
        /**
         * Badges
         */
        readonly badges: import("../hydration/user").UserBadges;
        /**
         * User Status
         */
        readonly status: {
            text?: string | null | undefined;
            presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
        } | undefined;
        /**
         * Relationship with user
         */
        readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
        /**
         * Whether the user is online
         */
        readonly online: boolean;
        /**
         * Whether the user is privileged
         */
        readonly privileged: boolean;
        /**
         * Flags
         */
        readonly flags: import("../hydration/user").UserFlags;
        /**
         * Bot information
         */
        readonly bot: {
            owner: string;
        } | undefined;
    };
    "__#9@#storage": ObjectStorage<HydratedUser>;
    "__#9@#objects": Record<string, {
        readonly id: string;
        /**
         * Time when this user created their account
         */
        readonly createdAt: Date;
        /**
         * Username
         */
        readonly username: string;
        /**
         * Avatar
         */
        readonly avatar: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | undefined;
        /**
         * Badges
         */
        readonly badges: import("../hydration/user").UserBadges;
        /**
         * User Status
         */
        readonly status: {
            text?: string | null | undefined;
            presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
        } | undefined;
        /**
         * Relationship with user
         */
        readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
        /**
         * Whether the user is online
         */
        readonly online: boolean;
        /**
         * Whether the user is privileged
         */
        readonly privileged: boolean;
        /**
         * Flags
         */
        readonly flags: import("../hydration/user").UserFlags;
        /**
         * Bot information
         */
        readonly bot: {
            owner: string;
        } | undefined;
    }>;
    /**
     * Get an existing User
     * @param id User ID
     * @returns User
     */
    get(id: string): {
        readonly id: string;
        /**
         * Time when this user created their account
         */
        readonly createdAt: Date;
        /**
         * Username
         */
        readonly username: string;
        /**
         * Avatar
         */
        readonly avatar: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | undefined;
        /**
         * Badges
         */
        readonly badges: import("../hydration/user").UserBadges;
        /**
         * User Status
         */
        readonly status: {
            text?: string | null | undefined;
            presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
        } | undefined;
        /**
         * Relationship with user
         */
        readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
        /**
         * Whether the user is online
         */
        readonly online: boolean;
        /**
         * Whether the user is privileged
         */
        readonly privileged: boolean;
        /**
         * Flags
         */
        readonly flags: import("../hydration/user").UserFlags;
        /**
         * Bot information
         */
        readonly bot: {
            owner: string;
        } | undefined;
    } | undefined;
    /**
     * Fetch user by ID
     * @param id ID
     * @returns User
     */
    fetch(id: string): Promise<{
        readonly id: string;
        /**
         * Time when this user created their account
         */
        readonly createdAt: Date;
        /**
         * Username
         */
        readonly username: string;
        /**
         * Avatar
         */
        readonly avatar: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | undefined;
        /**
         * Badges
         */
        readonly badges: import("../hydration/user").UserBadges;
        /**
         * User Status
         */
        readonly status: {
            text?: string | null | undefined;
            presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
        } | undefined;
        /**
         * Relationship with user
         */
        readonly relationship: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
        /**
         * Whether the user is online
         */
        readonly online: boolean;
        /**
         * Whether the user is privileged
         */
        readonly privileged: boolean;
        /**
         * Flags
         */
        readonly flags: import("../hydration/user").UserFlags;
        /**
         * Bot information
         */
        readonly bot: {
            owner: string;
        } | undefined;
    } | undefined>;
};
export default _default;
//# sourceMappingURL=User.d.ts.map