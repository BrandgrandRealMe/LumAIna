"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Bot_collection;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Bot = void 0;
const ulid_1 = require("ulid");
/**
 * Bot Class
 */
class Bot {
    /**
     * Construct Bot
     * @param collection Collection
     * @param id Id
     */
    constructor(collection, id) {
        _Bot_collection.set(this, void 0);
        __classPrivateFieldSet(this, _Bot_collection, collection, "f");
        this.id = id;
    }
    /**
     * Convert to string
     * @returns String
     */
    toString() {
        return `<@${this.id}>`;
    }
    /**
     * Time when this user created their account
     */
    get createdAt() {
        return new Date((0, ulid_1.decodeTime)(this.id));
    }
    /**
     * Corresponding user
     */
    get user() {
        return __classPrivateFieldGet(this, _Bot_collection, "f").client.users.get(this.id);
    }
    /**
     * Owner's Id
     */
    get ownerId() {
        return __classPrivateFieldGet(this, _Bot_collection, "f").getUnderlyingObject(this.id).ownerId;
    }
    /**
     * Owner
     */
    get owner() {
        return __classPrivateFieldGet(this, _Bot_collection, "f").client.users.get(this.ownerId);
    }
    /**
     * Bot Token
     */
    get token() {
        return __classPrivateFieldGet(this, _Bot_collection, "f").getUnderlyingObject(this.id).token;
    }
    /**
     * Whether this bot can be invited by anyone
     */
    get public() {
        return __classPrivateFieldGet(this, _Bot_collection, "f").getUnderlyingObject(this.id).public;
    }
    /**
     * Whether this bot has analytics enabled
     */
    get analytics() {
        return __classPrivateFieldGet(this, _Bot_collection, "f").getUnderlyingObject(this.id).analytics;
    }
    /**
     * Whether this bot shows up on Discover
     */
    get discoverable() {
        return __classPrivateFieldGet(this, _Bot_collection, "f").getUnderlyingObject(this.id).discoverable;
    }
    /**
     * Interactions URL
     */
    get interactionsUrl() {
        return __classPrivateFieldGet(this, _Bot_collection, "f").getUnderlyingObject(this.id).interactionsUrl;
    }
    /**
     * Link to terms of service
     */
    get termsOfServiceUrl() {
        return __classPrivateFieldGet(this, _Bot_collection, "f").getUnderlyingObject(this.id).termsOfServiceUrl;
    }
    /**
     * Link to privacy policy
     */
    get privacyPolicyUrl() {
        return __classPrivateFieldGet(this, _Bot_collection, "f").getUnderlyingObject(this.id).privacyPolicyUrl;
    }
    /**
     * Bot Flags
     */
    get flags() {
        return __classPrivateFieldGet(this, _Bot_collection, "f").getUnderlyingObject(this.id).flags;
    }
    /**
     * Edit a bot
     * @param data Changes
     */
    edit(data) {
        return __awaiter(this, void 0, void 0, function* () {
            yield __classPrivateFieldGet(this, _Bot_collection, "f").client.api.patch(`/bots/${this.id}`, data);
        });
    }
    /**
     * Delete a bot
     */
    delete() {
        return __awaiter(this, void 0, void 0, function* () {
            yield __classPrivateFieldGet(this, _Bot_collection, "f").client.api.delete(`/bots/${this.id}`);
            __classPrivateFieldGet(this, _Bot_collection, "f").delete(this.id);
        });
    }
}
exports.Bot = Bot;
_Bot_collection = new WeakMap();
