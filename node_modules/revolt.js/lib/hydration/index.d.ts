/**
 * Functions to map from one object to another
 */
export type MappingFns<Input, Output, Key extends keyof Output> = Record<Key, (value: Input) => Output[Key]>;
/**
 * Key mapping information
 */
export type KeyMapping<Input, Output> = Record<keyof Input, keyof Output>;
/**
 * Hydration information
 */
export type Hydrate<Input, Output> = {
    keyMapping: Partial<KeyMapping<Input, Output>>;
    functions: MappingFns<Input, Output, keyof Output>;
};
declare const hydrators: {
    channel: Hydrate<import("../lib/merge").Merge<{
        channel_type: "SavedMessages";
        _id: string;
        user: string;
    } | {
        channel_type: "DirectMessage";
        _id: string;
        active: boolean;
        recipients: string[];
        last_message_id?: string | null | undefined;
    } | {
        channel_type: "Group";
        _id: string;
        name: string;
        owner: string;
        description?: string | null | undefined;
        recipients: string[];
        icon?: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | null | undefined;
        last_message_id?: string | null | undefined;
        permissions?: number | null | undefined;
        nsfw?: boolean | undefined;
    } | {
        channel_type: "TextChannel";
        _id: string;
        server: string;
        name: string;
        description?: string | null | undefined;
        icon?: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | null | undefined;
        last_message_id?: string | null | undefined;
        default_permissions?: {
            a: number;
            d: number;
        } | null | undefined;
        role_permissions?: {
            [key: string]: {
                a: number;
                d: number;
            };
        } | undefined;
        nsfw?: boolean | undefined;
    } | {
        channel_type: "VoiceChannel";
        _id: string;
        server: string;
        name: string;
        description?: string | null | undefined;
        icon?: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | null | undefined;
        default_permissions?: {
            a: number;
            d: number;
        } | null | undefined;
        role_permissions?: {
            [key: string]: {
                a: number;
                d: number;
            };
        } | undefined;
        nsfw?: boolean | undefined;
    }>, import("./channel").HydratedChannel>;
    emoji: Hydrate<import("../lib/merge").Merge<{
        _id: string;
        parent: {
            type: "Server";
            id: string;
        } | {
            type: "Detached";
        };
        creator_id: string;
        name: string;
        animated?: boolean | undefined;
        nsfw?: boolean | undefined;
    }>, import("./emoji").HydratedEmoji>;
    message: Hydrate<import("../lib/merge").Merge<{
        _id: string;
        nonce?: string | null | undefined;
        channel: string;
        author: string;
        content?: string | null | undefined;
        system?: {
            type: "text";
            content: string;
        } | {
            type: "user_added";
            id: string;
            by: string;
        } | {
            type: "user_remove";
            id: string;
            by: string;
        } | {
            type: "user_joined";
            id: string;
        } | {
            type: "user_left";
            id: string;
        } | {
            type: "user_kicked";
            id: string;
        } | {
            type: "user_banned";
            id: string;
        } | {
            type: "channel_renamed";
            name: string;
            by: string;
        } | {
            type: "channel_description_changed";
            by: string;
        } | {
            type: "channel_icon_changed";
            by: string;
        } | {
            type: "channel_ownership_changed";
            from: string;
            to: string;
        } | null | undefined;
        attachments?: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        }[] | null | undefined;
        edited?: string | null | undefined;
        embeds?: ({
            type: "Website";
            url?: string | null | undefined;
            original_url?: string | null | undefined;
            special?: {
                type: "None";
            } | {
                type: "GIF";
            } | {
                type: "YouTube";
                id: string;
                timestamp?: string | null | undefined;
            } | {
                type: "Lightspeed";
                content_type: "Channel";
                id: string;
            } | {
                type: "Twitch";
                content_type: "Channel" | "Video" | "Clip";
                id: string;
            } | {
                type: "Spotify";
                content_type: string;
                id: string;
            } | {
                type: "Soundcloud";
            } | {
                type: "Bandcamp";
                content_type: "Album" | "Track";
                id: string;
            } | {
                type: "Streamable";
                id: string;
            } | null | undefined;
            title?: string | null | undefined;
            description?: string | null | undefined;
            image?: {
                url: string;
                width: number;
                height: number;
                size: "Large" | "Preview";
            } | null | undefined;
            video?: {
                url: string;
                width: number;
                height: number;
            } | null | undefined;
            site_name?: string | null | undefined;
            icon_url?: string | null | undefined;
            colour?: string | null | undefined;
        } | {
            type: "Image";
            url: string;
            width: number;
            height: number;
            size: "Large" | "Preview";
        } | {
            type: "Video";
            url: string;
            width: number;
            height: number;
        } | {
            type: "Text";
            icon_url?: string | null | undefined;
            url?: string | null | undefined;
            title?: string | null | undefined;
            description?: string | null | undefined;
            media?: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | null | undefined;
            colour?: string | null | undefined;
        } | {
            type: "None";
        })[] | null | undefined;
        mentions?: string[] | null | undefined;
        replies?: string[] | null | undefined;
        reactions?: {
            [key: string]: string[];
        } | undefined;
        interactions?: {
            reactions?: string[] | null | undefined;
            restrict_reactions?: boolean | undefined;
        } | undefined;
        masquerade?: {
            name?: string | null | undefined;
            avatar?: string | null | undefined;
            colour?: string | null | undefined;
        } | null | undefined;
    }>, import("./message").HydratedMessage>;
    server: Hydrate<{
        _id: string;
        owner: string;
        name: string;
        description?: string | null | undefined;
        channels: string[];
        categories?: {
            id: string;
            title: string;
            channels: string[];
        }[] | null | undefined;
        system_messages?: {
            user_joined?: string | null | undefined;
            user_left?: string | null | undefined;
            user_kicked?: string | null | undefined;
            user_banned?: string | null | undefined;
        } | null | undefined;
        roles?: {
            [key: string]: {
                name: string;
                permissions: {
                    a: number;
                    d: number;
                };
                colour?: string | null | undefined;
                hoist?: boolean | undefined;
                rank?: number | undefined;
            };
        } | undefined;
        default_permissions: number;
        icon?: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | null | undefined;
        banner?: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | null | undefined;
        flags?: number | null | undefined;
        nsfw?: boolean | undefined;
        analytics?: boolean | undefined;
        discoverable?: boolean | undefined;
    }, import("./server").HydratedServer>;
    serverMember: Hydrate<import("../lib/merge").Merge<{
        _id: {
            server: string;
            user: string;
        };
        joined_at: string;
        nickname?: string | null | undefined;
        avatar?: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | null | undefined;
        roles?: string[] | undefined;
        timeout?: string | null | undefined;
    }>, import("./serverMember").HydratedServerMember>;
    user: Hydrate<{
        _id: string;
        username: string;
        avatar?: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | null | undefined;
        relations?: {
            _id: string;
            status: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
        }[] | null | undefined;
        badges?: number | null | undefined;
        status?: {
            text?: string | null | undefined;
            presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
        } | null | undefined;
        profile?: {
            content?: string | null | undefined;
            background?: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | null | undefined;
        } | null | undefined;
        flags?: number | null | undefined;
        privileged?: boolean | undefined;
        bot?: {
            owner: string;
        } | null | undefined;
        relationship?: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther" | null | undefined;
        online?: boolean | null | undefined;
    }, import("./user").HydratedUser>;
};
export type Hydrators = typeof hydrators;
type ExtractInput<T> = T extends Hydrate<infer I, any> ? I : never;
type ExtractOutput<T> = T extends Hydrate<any, infer O> ? O : never;
/**
 * Hydrate some input with a given type
 * @param type Type
 * @param input Input Object
 * @returns Hydrated Object
 */
export declare function hydrate<T extends keyof Hydrators>(type: T, input: ExtractInput<Hydrators[T]>): ExtractOutput<{
    channel: Hydrate<import("../lib/merge").Merge<{
        channel_type: "SavedMessages";
        _id: string;
        user: string;
    } | {
        channel_type: "DirectMessage";
        _id: string;
        active: boolean;
        recipients: string[];
        last_message_id?: string | null | undefined;
    } | {
        channel_type: "Group";
        _id: string;
        name: string;
        owner: string;
        description?: string | null | undefined;
        recipients: string[];
        icon?: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | null | undefined;
        last_message_id?: string | null | undefined;
        permissions?: number | null | undefined;
        nsfw?: boolean | undefined;
    } | {
        channel_type: "TextChannel";
        _id: string;
        server: string;
        name: string;
        description?: string | null | undefined;
        icon?: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | null | undefined;
        last_message_id?: string | null | undefined;
        default_permissions?: {
            a: number;
            d: number;
        } | null | undefined;
        role_permissions?: {
            [key: string]: {
                a: number;
                d: number;
            };
        } | undefined;
        nsfw?: boolean | undefined;
    } | {
        channel_type: "VoiceChannel";
        _id: string;
        server: string;
        name: string;
        description?: string | null | undefined;
        icon?: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | null | undefined;
        default_permissions?: {
            a: number;
            d: number;
        } | null | undefined;
        role_permissions?: {
            [key: string]: {
                a: number;
                d: number;
            };
        } | undefined;
        nsfw?: boolean | undefined;
    }>, import("./channel").HydratedChannel>;
    emoji: Hydrate<import("../lib/merge").Merge<{
        _id: string;
        parent: {
            type: "Server";
            id: string;
        } | {
            type: "Detached";
        };
        creator_id: string;
        name: string;
        animated?: boolean | undefined;
        nsfw?: boolean | undefined;
    }>, import("./emoji").HydratedEmoji>;
    message: Hydrate<import("../lib/merge").Merge<{
        _id: string;
        nonce?: string | null | undefined;
        channel: string;
        author: string;
        content?: string | null | undefined;
        system?: {
            type: "text";
            content: string;
        } | {
            type: "user_added";
            id: string;
            by: string;
        } | {
            type: "user_remove";
            id: string;
            by: string;
        } | {
            type: "user_joined";
            id: string;
        } | {
            type: "user_left";
            id: string;
        } | {
            type: "user_kicked";
            id: string;
        } | {
            type: "user_banned";
            id: string;
        } | {
            type: "channel_renamed";
            name: string;
            by: string;
        } | {
            type: "channel_description_changed";
            by: string;
        } | {
            type: "channel_icon_changed";
            by: string;
        } | {
            type: "channel_ownership_changed";
            from: string;
            to: string;
        } | null | undefined;
        attachments?: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        }[] | null | undefined;
        edited?: string | null | undefined;
        embeds?: ({
            type: "Website";
            url?: string | null | undefined;
            original_url?: string | null | undefined;
            special?: {
                type: "None";
            } | {
                type: "GIF";
            } | {
                type: "YouTube";
                id: string;
                timestamp?: string | null | undefined;
            } | {
                type: "Lightspeed";
                content_type: "Channel";
                id: string;
            } | {
                type: "Twitch";
                content_type: "Channel" | "Video" | "Clip";
                id: string;
            } | {
                type: "Spotify";
                content_type: string;
                id: string;
            } | {
                type: "Soundcloud";
            } | {
                type: "Bandcamp";
                content_type: "Album" | "Track";
                id: string;
            } | {
                type: "Streamable";
                id: string;
            } | null | undefined;
            title?: string | null | undefined;
            description?: string | null | undefined;
            image?: {
                url: string;
                width: number;
                height: number;
                size: "Large" | "Preview";
            } | null | undefined;
            video?: {
                url: string;
                width: number;
                height: number;
            } | null | undefined;
            site_name?: string | null | undefined;
            icon_url?: string | null | undefined;
            colour?: string | null | undefined;
        } | {
            type: "Image";
            url: string;
            width: number;
            height: number;
            size: "Large" | "Preview";
        } | {
            type: "Video";
            url: string;
            width: number;
            height: number;
        } | {
            type: "Text";
            icon_url?: string | null | undefined;
            url?: string | null | undefined;
            title?: string | null | undefined;
            description?: string | null | undefined;
            media?: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | null | undefined;
            colour?: string | null | undefined;
        } | {
            type: "None";
        })[] | null | undefined;
        mentions?: string[] | null | undefined;
        replies?: string[] | null | undefined;
        reactions?: {
            [key: string]: string[];
        } | undefined;
        interactions?: {
            reactions?: string[] | null | undefined;
            restrict_reactions?: boolean | undefined;
        } | undefined;
        masquerade?: {
            name?: string | null | undefined;
            avatar?: string | null | undefined;
            colour?: string | null | undefined;
        } | null | undefined;
    }>, import("./message").HydratedMessage>;
    server: Hydrate<{
        _id: string;
        owner: string;
        name: string;
        description?: string | null | undefined;
        channels: string[];
        categories?: {
            id: string;
            title: string;
            channels: string[];
        }[] | null | undefined;
        system_messages?: {
            user_joined?: string | null | undefined;
            user_left?: string | null | undefined;
            user_kicked?: string | null | undefined;
            user_banned?: string | null | undefined;
        } | null | undefined;
        roles?: {
            [key: string]: {
                name: string;
                permissions: {
                    a: number;
                    d: number;
                };
                colour?: string | null | undefined;
                hoist?: boolean | undefined;
                rank?: number | undefined;
            };
        } | undefined;
        default_permissions: number;
        icon?: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | null | undefined;
        banner?: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | null | undefined;
        flags?: number | null | undefined;
        nsfw?: boolean | undefined;
        analytics?: boolean | undefined;
        discoverable?: boolean | undefined;
    }, import("./server").HydratedServer>;
    serverMember: Hydrate<import("../lib/merge").Merge<{
        _id: {
            server: string;
            user: string;
        };
        joined_at: string;
        nickname?: string | null | undefined;
        avatar?: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | null | undefined;
        roles?: string[] | undefined;
        timeout?: string | null | undefined;
    }>, import("./serverMember").HydratedServerMember>;
    user: Hydrate<{
        _id: string;
        username: string;
        avatar?: {
            _id: string;
            tag: string;
            filename: string;
            metadata: {
                type: "File";
            } | {
                type: "Text";
            } | {
                type: "Image";
                width: number;
                height: number;
            } | {
                type: "Video";
                width: number;
                height: number;
            } | {
                type: "Audio";
            };
            content_type: string;
            size: number;
            deleted?: boolean | null | undefined;
            reported?: boolean | null | undefined;
            message_id?: string | null | undefined;
            user_id?: string | null | undefined;
            server_id?: string | null | undefined;
            object_id?: string | null | undefined;
        } | null | undefined;
        relations?: {
            _id: string;
            status: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther";
        }[] | null | undefined;
        badges?: number | null | undefined;
        status?: {
            text?: string | null | undefined;
            presence?: "Online" | "Idle" | "Focus" | "Busy" | "Invisible" | null | undefined;
        } | null | undefined;
        profile?: {
            content?: string | null | undefined;
            background?: {
                _id: string;
                tag: string;
                filename: string;
                metadata: {
                    type: "File";
                } | {
                    type: "Text";
                } | {
                    type: "Image";
                    width: number;
                    height: number;
                } | {
                    type: "Video";
                    width: number;
                    height: number;
                } | {
                    type: "Audio";
                };
                content_type: string;
                size: number;
                deleted?: boolean | null | undefined;
                reported?: boolean | null | undefined;
                message_id?: string | null | undefined;
                user_id?: string | null | undefined;
                server_id?: string | null | undefined;
                object_id?: string | null | undefined;
            } | null | undefined;
        } | null | undefined;
        flags?: number | null | undefined;
        privileged?: boolean | undefined;
        bot?: {
            owner: string;
        } | null | undefined;
        relationship?: "None" | "User" | "Friend" | "Outgoing" | "Incoming" | "Blocked" | "BlockedOther" | null | undefined;
        online?: boolean | null | undefined;
    }, import("./user").HydratedUser>;
}[T]>;
export {};
//# sourceMappingURL=index.d.ts.map