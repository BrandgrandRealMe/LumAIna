import { User } from "..";
import { ClassCollection } from ".";
/**
 * Collection of Users
 */
export class UserCollection extends ClassCollection {
    /**
     * Construct User collection
     */
    constructor(client) {
        super(client);
        const SYSTEM_ID = "0".repeat(26);
        this.getOrCreate(SYSTEM_ID, {
            _id: SYSTEM_ID,
            username: "Revolt",
            discriminator: "0000",
        });
    }
    /**
     * Fetch user by ID
     * @param id Id
     * @returns User
     */
    async fetch(id) {
        const user = this.get(id);
        if (user)
            return user;
        const data = await this.client.api.get(`/users/${id}`);
        return this.getOrCreate(data._id, data);
    }
    /**
     * Get or create
     * @param id Id
     * @param data Data
     * @param isNew Whether this object is new
     */
    getOrCreate(id, data) {
        if (this.has(id)) {
            return this.get(id);
        }
        else {
            const instance = new User(this, id);
            this.create(id, "user", instance, this.client, data);
            return instance;
        }
    }
    /**
     * Get or return partial
     * @param id Id
     */
    getOrPartial(id) {
        if (this.has(id)) {
            return this.get(id);
        }
        else if (this.client.options.partials) {
            const instance = new User(this, id);
            this.create(id, "user", instance, this.client, {
                id,
                partial: true,
            });
            return instance;
        }
    }
}
