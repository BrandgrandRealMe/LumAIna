import { ReactiveMap } from "@solid-primitives/map";
import { ReactiveSet } from "@solid-primitives/set";
import { File, MessageEmbed, MessageWebhook, SystemMessage, } from "..";
export const messageHydration = {
    keyMapping: {
        _id: "id",
        channel: "channelId",
        author: "authorId",
        system: "systemMessage",
        edited: "editedAt",
        mentions: "mentionIds",
        replies: "replyIds",
    },
    functions: {
        id: (message) => message._id,
        nonce: (message) => message.nonce,
        channelId: (message) => message.channel,
        authorId: (message) => message.author,
        webhook: (message, ctx) => message.webhook
            ? new MessageWebhook(ctx, message.webhook, message.author)
            : undefined,
        content: (message) => message.content,
        systemMessage: (message, ctx) => SystemMessage.from(ctx, message.system),
        attachments: (message, ctx) => message.attachments.map((file) => new File(ctx, file)),
        editedAt: (message) => new Date(message.edited),
        embeds: (message, ctx) => message.embeds.map((embed) => MessageEmbed.from(ctx, embed)),
        mentionIds: (message) => message.mentions,
        replyIds: (message) => message.replies,
        reactions: (message) => {
            const map = new ReactiveMap();
            if (message.reactions) {
                for (const reaction of Object.keys(message.reactions)) {
                    map.set(reaction, new ReactiveSet(message.reactions[reaction]));
                }
            }
            return map;
        },
        interactions: (message) => message.interactions,
        masquerade: (message) => message.masquerade,
    },
    initialHydration: () => ({
        reactions: new ReactiveMap(),
    }),
};
